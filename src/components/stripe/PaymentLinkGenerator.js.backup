import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { useState } from 'react';
import { Modal, Form, Input, InputNumber, Button, notification } from 'antd';
import stripeService from '../../services/stripeService';
const PaymentLinkGenerator = ({ visible, onClose }) => {
    const [form] = Form.useForm();
    const [loading, setLoading] = useState(false);
    const handleSubmit = async (values) => {
        setLoading(true);
        try {
            const response = await stripeService.createPaymentLink(values);
            if (response.success) {
                notification.success({ message: 'Payment Link creado exitosamente' });
                onClose();
            }
        }
        catch (error) {
            notification.error({ message: 'Error al crear Payment Link', description: error.message });
        }
        finally {
            setLoading(false);
        }
    };
    return (_jsx(Modal, { title: "Generar Payment Link", open: visible, onCancel: onClose, footer: null, children: _jsxs(Form, { form: form, layout: "vertical", onFinish: handleSubmit, children: [_jsx(Form.Item, { label: "Cliente ID", name: "customerId", rules: [{ required: true }], children: _jsx(Input, { placeholder: "ID del cliente" }) }), _jsx(Form.Item, { label: "Nombre del Producto", name: "productName", rules: [{ required: true }], children: _jsx(Input, { placeholder: "Nombre del producto" }) }), _jsx(Form.Item, { label: "Descripci\u00F3n", name: "description", rules: [{ required: true }], children: _jsx(Input.TextArea, { placeholder: "Descripci\u00F3n del producto" }) }), _jsx(Form.Item, { label: "Precio", name: "amount", rules: [{ required: true }], children: _jsx(InputNumber, { style: { width: '100%' }, placeholder: "99.99", min: 0.5, step: 0.01 }) }), _jsx(Button, { type: "primary", htmlType: "submit", loading: loading, block: true, children: "Generar Payment Link" })] }) }));
};
export default PaymentLinkGenerator;
